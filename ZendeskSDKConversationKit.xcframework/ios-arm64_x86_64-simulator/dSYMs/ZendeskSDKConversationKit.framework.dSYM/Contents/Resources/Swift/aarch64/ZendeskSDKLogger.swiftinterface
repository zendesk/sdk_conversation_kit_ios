// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target arm64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ZendeskSDKLogger
import Foundation
import Swift
@_exported import ZendeskSDKLogger
import _Concurrency
import os
public protocol LoggerFactory {
  static func getLogger(namespace: Swift.String, category: Swift.String) -> ZendeskSDKLogger.Log
}
@objc(ZDKLogLevel) public enum LogLevel : Swift.Int {
  case `default` = 2
  case info = 3
  case debug = 4
  case error = 5
  case fault = 6
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public protocol Log {
  var namespace: Swift.String { get }
  var category: Swift.String { get }
  func logit(file: Swift.StaticString, line: Swift.Int, function: Swift.StaticString, level: ZendeskSDKLogger.LogLevel, error: Swift.Error?, message: Swift.String, args: [Swift.CVarArg])
}
extension ZendeskSDKLogger.Log {
  public func `default`(file: Swift.StaticString = #filePath, line: Swift.Int = #line, function: Swift.StaticString = #function, error: Swift.Error? = nil, _ message: Swift.String, _ args: Swift.CVarArg...)
  public func info(file: Swift.StaticString = #filePath, line: Swift.Int = #line, function: Swift.StaticString = #function, error: Swift.Error? = nil, _ message: Swift.String, _ args: Swift.CVarArg...)
  public func debug(file: Swift.StaticString = #filePath, line: Swift.Int = #line, function: Swift.StaticString = #function, error: Swift.Error? = nil, _ message: Swift.String, _ args: Swift.CVarArg...)
  public func error(file: Swift.StaticString = #filePath, line: Swift.Int = #line, function: Swift.StaticString = #function, error: Swift.Error? = nil, _ message: Swift.String, _ args: Swift.CVarArg...)
  public func fault(file: Swift.StaticString = #filePath, line: Swift.Int = #line, function: Swift.StaticString = #function, error: Swift.Error? = nil, _ message: Swift.String, _ args: Swift.CVarArg...)
}
@_inheritsConvenienceInitializers @objc(ZDKLogger) final public class Logger : ObjectiveC.NSObject {
  @objc public static var level: ZendeskSDKLogger.LogLevel
  @objc public static var enabled: Swift.Bool
  public static var factory: ZendeskSDKLogger.LoggerFactory.Type
  public static func getLogger(namespace: Swift.String, category: Swift.String) -> ZendeskSDKLogger.Log
  @objc override dynamic public init()
  @objc deinit
}
public protocol Loggable {
  static var logNamespace: Swift.String { get }
  static var logCategory: Swift.String { get }
  static var log: ZendeskSDKLogger.Log { get }
  var log: ZendeskSDKLogger.Log { get }
}
extension ZendeskSDKLogger.Loggable {
  public static var log: ZendeskSDKLogger.Log {
    get
  }
  public var log: ZendeskSDKLogger.Log {
    get
  }
}
extension ZendeskSDKLogger.LogLevel : Swift.Equatable {}
extension ZendeskSDKLogger.LogLevel : Swift.Hashable {}
extension ZendeskSDKLogger.LogLevel : Swift.RawRepresentable {}
