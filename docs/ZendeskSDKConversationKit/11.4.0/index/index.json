{"includedArchiveIdentifiers":["com.zendesk.ConversationKit"],"interfaceLanguages":{"occ":[{"children":[{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitversionnumber","title":"ConversationKitVersionNumber","type":"var"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitversionstring","title":"ConversationKitVersionString","type":"var"}],"path":"\/documentation\/zendesksdkconversationkit","title":"ZendeskSDKConversationKit","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/==(_:_:)","title":"static func == (Activity, Activity) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/init(id:type:authortype:name:avatarurl:appuserid:lastread:isinitialrouting:queueposition:lowestqueueposition:responsetime:startat:)","title":"init(id: String, type: ActivityType, authorType: AuthorType, name: String?, avatarURL: String?, appUserId: String?, lastRead: Date?, isInitialRouting: Bool, queuePosition: Int?, lowestQueuePosition: Int?, responseTime: ResponseTime?, startAt: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/appuserid","title":"let appUserId: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/authortype","title":"let authorType: AuthorType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/avatarurl","title":"let avatarURL: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/isinitialrouting","title":"let isInitialRouting: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/lastread","title":"let lastRead: Date?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/lowestqueueposition","title":"let lowestQueuePosition: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/queueposition","title":"let queuePosition: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/responsetime","title":"let responseTime: ResponseTime?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/startat","title":"let startAt: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/type","title":"let type: ActivityType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/activity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/activity","title":"Activity","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authentication\/==(_:_:)","title":"static func == (Authentication, Authentication) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authentication\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authentication\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/authentication\/token","title":"var token: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/authentication\/type","title":"var type: AuthenticationType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authentication\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/authentication\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/authentication","title":"Authentication","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/==(_:_:)","title":"static func == (Author, Author) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/init(id:type:displayname:avatarurl:subroles:)","title":"init(id: String, type: AuthorType, displayName: String?, avatarURL: String?, subroles: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/avatarurl","title":"var avatarURL: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/displayname","title":"let displayName: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/subroles","title":"var subroles: [String]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/type","title":"let type: AuthorType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/author\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/author\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/author","title":"Author","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/==(_:_:)","title":"static func == (BuyAction, BuyAction) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/init(id:text:uri:default:amount:currency:state:metadata:)","title":"init(id: String, text: String, uri: String, default: Bool, amount: Double, currency: String, state: MessageActionBuyState, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/amount","title":"let amount: Double","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/currency","title":"let currency: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/default","title":"let `default`: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/state","title":"let state: MessageActionBuyState","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/type","title":"var type: ActionType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/uri","title":"let uri: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/buyaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/buyaction","title":"BuyAction","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/==(_:_:)","title":"static func == (CarouselMessageContent, CarouselMessageContent) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/init(messageitems:metadata:)","title":"init(messageItems: [MessageActionItem], metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/messageitems","title":"var messageItems: [MessageActionItem]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/type","title":"var type: MessageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/carouselmessagecontent","title":"CarouselMessageContent","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/==(_:_:)","title":"static func == (Config, Config) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/init(appid:baseurl:settingsbaseurl:integrationid:region:restretrypolicy:waittimeconfig:)","title":"init(appId: String, baseURL: String, settingsBaseURL: String, integrationId: String, region: Region, restRetryPolicy: RestRetryPolicy, waitTimeConfig: WaitTimeConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/appid","title":"var appId: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/baseurl","title":"var baseURL: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/integrationid","title":"let integrationId: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.property","title":"let region: Region","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/restretrypolicy","title":"let restRetryPolicy: RestRetryPolicy","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/settingsbaseurl","title":"var settingsBaseURL: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/waittimeconfig","title":"let waitTimeConfig: WaitTimeConfig","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum\/eu","title":"case eu","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum\/us","title":"case us","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/config\/region-swift.enum","title":"Config.Region","type":"enum"}],"path":"\/documentation\/zendesksdkconversationkit\/config","title":"Config","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/==(_:_:)","title":"static func == (Conversation, Conversation) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/init(id:type:isdefault:displayname:displaydescription:iconurl:business:businesslastread:lastupdatedat:metadata:participants:messages:hasprevious:myself:activity:status:createdat:routingstatus:)","title":"init(id: String, type: ConversationType, isDefault: Bool, displayName: String?, displayDescription: String?, iconURL: String?, business: [String], businessLastRead: Date?, lastUpdatedAt: Date?, metadata: [String : AnyHashable]?, participants: [Participant], messages: [Message], hasPrevious: Bool, myself: Participant?, activity: Activity?, status: ConversationStatus, createdAt: Date?, routingStatus: ConversationRoutingStatus)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/activity","title":"let activity: Activity?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/business","title":"let business: [String]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/businesslastread","title":"let businessLastRead: Date?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/createdat","title":"let createdAt: Date?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/displaydescription","title":"let displayDescription: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/displayname","title":"let displayName: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/hasprevious","title":"let hasPrevious: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/iconurl","title":"let iconURL: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/isdefault","title":"let isDefault: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/lastupdatedat","title":"let lastUpdatedAt: Date?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/messages","title":"let messages: [Message]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/mostrecentupdatetime","title":"var mostRecentUpdateTime: Date","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/myself","title":"let myself: Participant?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/participants","title":"let participants: [Participant]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/routingstatus","title":"let routingStatus: ConversationRoutingStatus","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/status","title":"let status: ConversationStatus","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/type","title":"let type: ConversationType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/conversation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/conversation","title":"Conversation","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationlist\/==(_:_:)","title":"static func == (ConversationList, ConversationList) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationlist\/init(conversations:hasmore:)","title":"init(conversations: [Conversation], hasMore: Bool)","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationlist\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationlist\/conversations","title":"let conversations: [Conversation]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationlist\/hasmore","title":"let hasMore: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationlist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationlist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationlist","title":"ConversationList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/defaultconversationkitbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/defaultconversationkitbuilder\/build(with:callbackqueue:)","title":"func build(with: SettingsParameters, callbackQueue: DispatchQueue) -> ConversationKit","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/defaultconversationkitbuilder","title":"DefaultConversationKitBuilder","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/==(_:_:)","title":"static func == (EmailFormField, EmailFormField) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/init(id:email:name:label:placeholder:)","title":"init(id: String, email: String, name: String, label: String, placeholder: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/email","title":"let email: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/placeholder","title":"let placeholder: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/type","title":"var type: FieldType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/value","title":"var value: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/emailformfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/emailformfield","title":"EmailFormField","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/==(_:_:)","title":"static func == (FileMessageContent, FileMessageContent) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/init(text:alttext:mediaurl:attachmentid:mediatype:mediasize:metadata:)","title":"init(text: String, altText: String, mediaURL: String, attachmentId: String?, mediaType: String, mediaSize: Int64, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/alttext","title":"let altText: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/attachmentid","title":"let attachmentId: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/mediasize","title":"let mediaSize: Int64","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/mediatype","title":"let mediaType: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/mediaurl","title":"let mediaURL: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/type","title":"var type: MessageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/filemessagecontent","title":"FileMessageContent","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/==(_:_:)","title":"static func == (FormMessageContent, FormMessageContent) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/init(id:formfields:blockchatinput:metadata:)","title":"init(id: String, formFields: [FormField], blockChatInput: Bool, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/blockchatinput","title":"let blockChatInput: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/fields","title":"var fields: [Field]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/formfields","title":"let formFields: [FormField]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/type","title":"var type: MessageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/formmessagecontent","title":"FormMessageContent","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/==(_:_:)","title":"static func == (FormResponseMessageContent, FormResponseMessageContent) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/init(quotedmessageid:formfields:metadata:)","title":"init(quotedMessageId: String, formFields: [FormField], metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/fields","title":"var fields: [Field]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/formfields","title":"let formFields: [FormField]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/quotedmessageid","title":"let quotedMessageId: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/type","title":"var type: MessageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/formresponsemessagecontent","title":"FormResponseMessageContent","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/==(_:_:)","title":"static func == (ImageMessageContent, ImageMessageContent) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/init(mediaurl:attachmentid:text:htmltext:actions:metadata:)","title":"init(mediaURL: String, attachmentId: String?, text: String?, htmlText: String?, actions: [MessageActionModel]?, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/actions","title":"let actions: [MessageActionModel]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/attachmentid","title":"let attachmentId: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/htmltext","title":"let htmlText: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/mediaurl","title":"let mediaURL: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/messageactions","title":"var messageActions: [MessageAction]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/type","title":"var type: MessageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/imagemessagecontent","title":"ImageMessageContent","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/==(_:_:)","title":"static func == (LinkAction, LinkAction) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/init(id:text:uri:default:metadata:)","title":"init(id: String, text: String, uri: String, default: Bool, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/default","title":"let `default`: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/type","title":"var type: ActionType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/uri","title":"let uri: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/linkaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/linkaction","title":"LinkAction","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/==(_:_:)","title":"static func == (LocationRequestAction, LocationRequestAction) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/init(id:text:metadata:)","title":"init(id: String, text: String, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/type","title":"var type: ActionType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/locationrequestaction","title":"LocationRequestAction","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/==(_:_:)","title":"static func == (Message, Message) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/init(id:content:createdat:receivedat:status:author:sourceid:localid:)","title":"init(id: String, content: MessageContent, createdAt: Date?, receivedAt: Date?, status: MessageStatus, author: Author, sourceId: String?, localId: String?)","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/init(mediaurl:text:metadata:)","title":"init?(mediaURL: URL, text: String?, metadata: [String : AnyHashable]?)","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/init(text:payload:metadata:)","title":"init(text: String, payload: String?, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/actions","title":"var actions: [MessageActionModel]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/author","title":"let author: Author","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/content","title":"let content: MessageContent","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/createdat","title":"let createdAt: Date?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/localid","title":"let localId: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/messageactions","title":"var messageActions: [MessageAction]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/messagecontent","title":"var messageContent: Content","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/messagetype","title":"var messageType: MessageType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/receivedat","title":"let receivedAt: Date?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/sourceid","title":"let sourceId: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/status","title":"let status: MessageStatus","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/timestamp","title":"var timestamp: Date","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/isauthoredby(_:)","title":"func isAuthoredBy(Participant?) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/message\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/message\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/message","title":"Message","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/==(_:_:)","title":"static func == (MessageActionItem, MessageActionItem) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/init(title:itemdescription:mediaurl:attachmentid:size:mediatype:actions:)","title":"init(title: String, itemDescription: String, mediaURL: String, attachmentId: String?, size: ActionItemSize, mediaType: String, actions: [MessageActionModel])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/actions","title":"let actions: [MessageActionModel]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/attachmentid","title":"var attachmentId: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/itemdescription","title":"var itemDescription: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/mediatype","title":"var mediaType: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/mediaurl","title":"var mediaURL: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/messageactions","title":"var messageActions: [MessageAction]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/size","title":"let size: ActionItemSize","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionitem","title":"MessageActionItem","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/option\/==(_:_:)","title":"static func == (Option, Option) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/option\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/option\/init(label:name:)","title":"init(label: String, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/option\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/option\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/option\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/option\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/option\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/option","title":"Option","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/participant\/==(_:_:)","title":"static func == (Participant, Participant) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/participant\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/participant\/appuserid","title":"let appUserId: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/participant\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/participant\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/participant\/lastread","title":"let lastRead: Date?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/participant\/unreadcount","title":"let unreadCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/participant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/participant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/participant","title":"Participant","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/==(_:_:)","title":"static func == (PostbackAction, PostbackAction) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/init(id:text:payload:metadata:)","title":"init(id: String, text: String, payload: String, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/payload","title":"let payload: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/type","title":"var type: ActionType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/postbackaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/postbackaction","title":"PostbackAction","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/==(_:_:)","title":"static func == (ProactiveMessage, ProactiveMessage) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/init(id:title:body:campaignid:campaignversion:)","title":"init(id: String, title: String, body: String, campaignId: String, campaignVersion: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/body","title":"let body: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/campaignid","title":"let campaignId: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/campaignversion","title":"let campaignVersion: Int","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/title","title":"let title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/proactivemessage","title":"ProactiveMessage","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/realtimesettings\/==(_:_:)","title":"static func == (RealtimeSettings, RealtimeSettings) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/realtimesettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/realtimesettings\/baseurl","title":"var baseURL: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/realtimesettings\/connectiondelay","title":"var connectionDelay: TimeInterval","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/realtimesettings\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/realtimesettings\/maxconnectionattempts","title":"var maxConnectionAttempts: Int","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/realtimesettings\/retryinterval","title":"var retryInterval: TimeInterval","type":"property"}],"path":"\/documentation\/zendesksdkconversationkit\/realtimesettings","title":"RealtimeSettings","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/==(_:_:)","title":"static func == (ReplyAction, ReplyAction) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/init(id:text:metadata:payload:iconurl:)","title":"init(id: String, text: String, metadata: [String : AnyHashable]?, payload: String, iconUrl: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/iconurl","title":"let iconUrl: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/payload","title":"let payload: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/type","title":"var type: ActionType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/replyaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/replyaction","title":"ReplyAction","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/==(_:_:)","title":"static func == (ResponseTime, ResponseTime) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/lower","title":"var lower: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/upper","title":"var upper: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/value","title":"var value: Double?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/responsetime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/responsetime","title":"ResponseTime","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/==(_:_:)","title":"static func == (RestRetryPolicy, RestRetryPolicy) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/init(regular:aggressive:timeunit:backoffmultiplier:maxretries:)","title":"init(regular: Int, aggressive: Int, timeUnit: UnitDuration, backOffMultiplier: Int, maxRetries: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/aggressive","title":"let aggressive: Int","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/backoffmultiplier","title":"let backOffMultiplier: Int","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/maxretries","title":"let maxRetries: Int","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/regular","title":"let regular: Int","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/timeunit","title":"let timeUnit: UnitDuration","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/default","title":"static var `default`: RestRetryPolicy","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/restretrypolicy","title":"RestRetryPolicy","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/==(_:_:)","title":"static func == (SelectFormField, SelectFormField) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/init(id:name:label:placeholder:select:selectsize:options:)","title":"init(id: String, name: String, label: String, placeholder: String?, select: [Option]?, selectSize: Int?, options: [Option])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/options","title":"let options: [Option]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/placeholder","title":"let placeholder: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/select","title":"let select: [Option]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/selectsize","title":"let selectSize: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/type","title":"var type: FieldType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/value","title":"var value: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/selectformfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/selectformfield","title":"SelectFormField","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/==(_:_:)","title":"static func == (ShareAction, ShareAction) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/init(id:metadata:)","title":"init(id: String, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/type","title":"var type: ActionType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/shareaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/shareaction","title":"ShareAction","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/==(_:_:)","title":"static func == (TextFormField, TextFormField) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/init(id:text:name:label:placeholder:minsize:maxsize:)","title":"init(id: String, text: String, name: String, label: String, placeholder: String?, minSize: Int?, maxSize: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/maxsize","title":"let maxSize: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/minsize","title":"let minSize: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/placeholder","title":"let placeholder: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/type","title":"var type: FieldType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/value","title":"var value: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/textformfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/textformfield","title":"TextFormField","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/==(_:_:)","title":"static func == (TextMessageContent, TextMessageContent) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/init(text:htmltext:payload:actions:metadata:)","title":"init(text: String, htmlText: String?, payload: String?, actions: [MessageActionModel]?, metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/actions","title":"let actions: [MessageActionModel]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/htmltext","title":"let htmlText: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/messageactions","title":"var messageActions: [MessageAction]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/payload","title":"let payload: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/type","title":"var type: MessageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/textmessagecontent","title":"TextMessageContent","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/==(_:_:)","title":"static func == (UnsupportedMessageContent, UnsupportedMessageContent) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/init(metadata:)","title":"init(metadata: [String : AnyHashable]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/type","title":"var type: MessageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/unsupportedmessagecontent","title":"UnsupportedMessageContent","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/==(_:_:)","title":"static func == (User, User) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/authentication","title":"let authentication: Authentication","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/conversations","title":"let conversations: [Conversation]","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/externalid","title":"let externalId: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/givenname","title":"let givenName: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/islatestconversationactive","title":"var isLatestConversationActive: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/locale","title":"let locale: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/realtimesettings","title":"let realtimeSettings: RealtimeSettings","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/surname","title":"let surname: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/user\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/user\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/user","title":"User","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/==(_:_:)","title":"static func == (WaitTimeConfig, WaitTimeConfig) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/init(waittimeenabled:queuepositionenabled:onlydecreasingqueue:waittimeoverride:queuepollinginterval:)","title":"init(waitTimeEnabled: Bool, queuePositionEnabled: Bool, onlyDecreasingQueue: Bool, waitTimeOverride: NSNumber?, queuePollingInterval: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/onlydecreasingqueue","title":"let onlyDecreasingQueue: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/queuepollinginterval","title":"let queuePollingInterval: Int","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/queuepositionenabled","title":"let queuePositionEnabled: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/waittimeenabled","title":"let waitTimeEnabled: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/waittimeoverride","title":"let waitTimeOverride: NSNumber?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/waittimeconfig","title":"WaitTimeConfig","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/==(_:_:)","title":"static func == (WaitTimeData, WaitTimeData) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/isinitialrouting","title":"let isInitialRouting: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/lowestqueueposition","title":"var lowestQueuePosition: Int?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/lowestqueuepositionnumber","title":"let lowestQueuePositionNumber: NSNumber?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/queueposition","title":"var queuePosition: Int","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/queuepositionnumber","title":"let queuePositionNumber: NSNumber","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/responsetime","title":"let responseTime: ResponseTime?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/waittimedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/waittimedata","title":"WaitTimeData","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/==(_:_:)","title":"static func == (WebViewAction, WebViewAction) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/init(id:text:uri:default:fallback:metadata:openonreceive:size:)","title":"init(id: String, text: String, uri: String, default: Bool, fallback: String, metadata: [String : AnyHashable]?, openOnReceive: Bool, size: WebViewActionSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/default","title":"let `default`: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/fallback","title":"let fallback: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/openonreceive","title":"let openOnReceive: Bool","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/size","title":"let size: WebViewActionSize","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/type","title":"var type: ActionType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/uri","title":"let uri: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/webviewaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/webviewaction","title":"WebViewAction","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/content\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/content\/type","title":"var type: MessageType","type":"property"}],"path":"\/documentation\/zendesksdkconversationkit\/content","title":"Content","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/clientid","title":"var clientId: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/config","title":"var config: Config","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/currentuser","title":"var currentUser: User?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/featureflagmanager","title":"var featureFlagManager: FeatureFlagManager","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/hasactiveconversationinlatestten","title":"var hasActiveConversationInLatestTen: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/addeventobserver(_:_:)","title":"func addEventObserver(AnyObject, (ConversationKitEvent) -> Void)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/clearconversationfields()-y6gd","title":"func clearConversationFields()","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/clearconversationfields()-5php8","title":"func clearConversationFields()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/clearconversationtags()-4u2i3","title":"func clearConversationTags()","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/clearconversationtags()-9ugex","title":"func clearConversationTags()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/clearproactivemessages(proactivemessageids:)-63emt","title":"func clearProactiveMessages(proactiveMessageIds: [String])","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/clearproactivemessages(proactivemessageids:)-7budt","title":"func clearProactiveMessages(proactiveMessageIds: [String])","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/createanonymoususer(with:surname:proactivemessageid:)-44ik0","title":"func createAnonymousUser(with: String?, surname: String?, proactiveMessageId: String?) async throws -> User","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/createanonymoususer(with:surname:proactivemessageid:)-4izok","title":"func createAnonymousUser(with: String?, surname: String?, proactiveMessageId: String?) async throws -> User","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/createanonymoususer(with:surname:proactivemessageid:result:)-3wbpr","title":"func createAnonymousUser(with: String?, surname: String?, proactiveMessageId: String?, result: ((Result<User, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/createanonymoususer(with:surname:proactivemessageid:result:)-4bvjl","title":"func createAnonymousUser(with: String?, surname: String?, proactiveMessageId: String?, result: ((Result<User, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/createconversation(proactivemessageid:)-3g9qb","title":"func createConversation(proactiveMessageId: String?) async throws -> Conversation","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/createconversation(proactivemessageid:)-7ymw2","title":"func createConversation(proactiveMessageId: String?) async throws -> Conversation","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/createconversation(proactivemessageid:result:)-8ns7r","title":"func createConversation(proactiveMessageId: String?, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/createconversation(proactivemessageid:result:)-9uo5e","title":"func createConversation(proactiveMessageId: String?, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/fetchwaittimeforconversation(conversationid:)-8u02m","title":"func fetchWaitTimeForConversation(conversationId: String) -> AnyPublisher<WaitTimeData, ConversationKitError>","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/fetchwaittimeforconversation(conversationid:)-3k7qt","title":"func fetchWaitTimeForConversation(conversationId: String) -> AnyPublisher<WaitTimeData, ConversationKitError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/fetchwaittimeforconversation(conversationid:result:)-4wttq","title":"func fetchWaitTimeForConversation(conversationId: String, result: ((Result<WaitTimeData, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/fetchwaittimeforconversation(conversationid:result:)-2umuz","title":"func fetchWaitTimeForConversation(conversationId: String, result: ((Result<WaitTimeData, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getconversation(with:)-9f76i","title":"func getConversation(with: String) async throws -> Conversation","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getconversation(with:)-1kuz9","title":"func getConversation(with: String) async throws -> Conversation","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getconversation(with:result:)-2iamy","title":"func getConversation(with: String, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getconversation(with:result:)-3adez","title":"func getConversation(with: String, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getconversations(offset:)-7ekxg","title":"func getConversations(offset: Int) async throws -> ConversationList","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getconversations(offset:)-s4d7","title":"func getConversations(offset: Int) async throws -> ConversationList","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getconversations(offset:result:)-2a38g","title":"func getConversations(offset: Int, result: ((Result<ConversationList, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getconversations(offset:result:)-8wspa","title":"func getConversations(offset: Int, result: ((Result<ConversationList, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getmessages(before:conversationid:)-8kxd1","title":"func getMessages(before: Date, conversationId: String) async throws -> Conversation","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getmessages(before:conversationid:)-6z3dh","title":"func getMessages(before: Date, conversationId: String) async throws -> Conversation","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getmessages(before:conversationid:result:)-94e3c","title":"func getMessages(before: Date, conversationId: String, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getmessages(before:conversationid:result:)-3j01d","title":"func getMessages(before: Date, conversationId: String, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getvisittype()-4xmkx","title":"func getVisitType() async throws -> VisitType","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getvisittype()-3ogu8","title":"func getVisitType() async throws -> VisitType","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getvisittype(result:)-77y4k","title":"func getVisitType(result: ((Result<VisitType, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/getvisittype(result:)-9xeb4","title":"func getVisitType(result: ((Result<VisitType, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/loginuser(with:)-1o741","title":"func loginUser(with: String) async throws -> User","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/loginuser(with:)-5lsdl","title":"func loginUser(with: String) async throws -> User","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/loginuser(with:result:)-7ziwl","title":"func loginUser(with: String, result: ((Result<User, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/loginuser(with:result:)-66r58","title":"func loginUser(with: String, result: ((Result<User, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/logoutuser()-4kckj","title":"func logoutUser() async throws","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/logoutuser()-2xk2l","title":"func logoutUser() async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/logoutuser(result:)-1jiq7","title":"func logoutUser(result: ((Result<Void, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/logoutuser(result:)-49eiz","title":"func logoutUser(result: ((Result<Void, ConversationKitError>) -> Void)?)","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/pause()","title":"func pause()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/proactivemessagestatuschanged(_:proactivemessage:jwt:)-80ytw","title":"func proactiveMessageStatusChanged(ProactiveMessageStatus, proactiveMessage: ProactiveMessage, jwt: String?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/proactivemessagestatuschanged(_:proactivemessage:jwt:)-5wh78","title":"func proactiveMessageStatusChanged(ProactiveMessageStatus, proactiveMessage: ProactiveMessage, jwt: String?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/refreshconversation(with:)-57nsf","title":"func refreshConversation(with: String) async throws -> Conversation","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/refreshconversation(with:)-252aj","title":"func refreshConversation(with: String) async throws -> Conversation","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/refreshconversation(with:result:)-6184","title":"func refreshConversation(with: String, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/refreshconversation(with:result:)-90hdr","title":"func refreshConversation(with: String, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/removeeventobserver(_:)","title":"func removeEventObserver(AnyObject)","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/resume()","title":"func resume()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendconversationactivity(activity:conversationid:)-4hbrj","title":"func sendConversationActivity(activity: ActivityType, conversationId: String) async throws","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendconversationactivity(activity:conversationid:)-3jmur","title":"func sendConversationActivity(activity: ActivityType, conversationId: String) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendconversationactivity(activity:conversationid:result:)-94aw0","title":"func sendConversationActivity(activity: ActivityType, conversationId: String, result: ((Result<Void, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendconversationactivity(activity:conversationid:result:)-2phqv","title":"func sendConversationActivity(activity: ActivityType, conversationId: String, result: ((Result<Void, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendconversationreferral(proactivemessageid:conversationid:)-2r5ti","title":"func sendConversationReferral(proactiveMessageId: String, conversationId: String) async throws -> Conversation","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendconversationreferral(proactivemessageid:conversationid:)-9mpfx","title":"func sendConversationReferral(proactiveMessageId: String, conversationId: String) async throws -> Conversation","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendconversationreferral(proactivemessageid:conversationid:result:)-7jnu5","title":"func sendConversationReferral(proactiveMessageId: String, conversationId: String, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendconversationreferral(proactivemessageid:conversationid:result:)-2mcf8","title":"func sendConversationReferral(proactiveMessageId: String, conversationId: String, result: ((Result<Conversation, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendmessage(message:conversationid:)-63hix","title":"func sendMessage(message: Message, conversationId: String) async throws -> Message","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendmessage(message:conversationid:)-4yl33","title":"func sendMessage(message: Message, conversationId: String) async throws -> Message","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendmessage(message:conversationid:result:)-1foa0","title":"func sendMessage(message: Message, conversationId: String, result: ((Result<Message, ConversationKitError>) -> Void)?)","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendmessage(message:conversationid:result:)-3ql7d","title":"func sendMessage(message: Message, conversationId: String, result: ((Result<Message, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendpostbackaction(actionid:actiontitle:conversationid:)-1oi3o","title":"func sendPostbackAction(actionId: PostbackActionID, actionTitle: MessageActionTitle, conversationId: String) async throws","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendpostbackaction(actionid:actiontitle:conversationid:)-49jr1","title":"func sendPostbackAction(actionId: PostbackActionID, actionTitle: MessageActionTitle, conversationId: String) async throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendpostbackaction(actionid:actiontitle:conversationid:result:)","title":"func sendPostbackAction(actionId: PostbackActionID, actionTitle: MessageActionTitle, conversationId: String, result: ((Result<Void, ConversationKitError>) -> Void)?)","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/sendpostbackaction(actionid:conversationid:actiontitle:result:)","title":"func sendPostbackAction(actionId: PostbackActionID, conversationId: String, actionTitle: MessageActionTitle, result: ((Result<Void, ConversationKitError>) -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/setconversationfields(_:)-9c9as","title":"func setConversationFields([String : AnyHashable])","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/setconversationfields(_:)-7nnog","title":"func setConversationFields([String : AnyHashable])","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/setconversationtags(_:)-6c0gj","title":"func setConversationTags([String])","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/setconversationtags(_:)-5098a","title":"func setConversationTags([String])","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/setvisittype(_:)","title":"func setVisitType(VisitType)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/stopfetchingwaittime()-2ovyu","title":"func stopFetchingWaitTime()","type":"method"}],"title":"ConversationKit Implementations","type":"groupMarker"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/stopfetchingwaittime()-3houb","title":"func stopFetchingWaitTime()","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/updatepushnotificationtoken(_:)","title":"func updatePushNotificationToken(String)","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkit\/updateuserconversations(_:)","title":"func updateUserConversations([Conversation])","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkit","title":"ConversationKit","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitbuilder\/build(with:callbackqueue:)","title":"func build(with: SettingsParameters, callbackQueue: DispatchQueue) -> ConversationKit","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkitbuilder","title":"ConversationKitBuilder","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/field\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/field\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/field\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/field\/type","title":"var type: FieldType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/field\/value","title":"var value: String","type":"property"}],"path":"\/documentation\/zendesksdkconversationkit\/field","title":"Field","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageaction\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageaction\/metadata","title":"var metadata: [String : AnyHashable]?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageaction\/type","title":"var type: ActionType","type":"property"}],"path":"\/documentation\/zendesksdkconversationkit\/messageaction","title":"MessageAction","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/defaultrestclientbuilder\/resolveauthorizationheader(authentication:userid:)","title":"static func resolveAuthorizationHeader(authentication: Authentication, userId: String) -> String?","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/defaultrestclientbuilder","title":"DefaultRESTClientBuilder","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/settingsparameters\/==(_:_:)","title":"static func == (SettingsParameters, SettingsParameters) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/settingsparameters\/init(config:featureflagmanager:)","title":"init(config: Config, featureFlagManager: FeatureFlagManager)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/settingsparameters\/config","title":"let config: Config","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/settingsparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/settingsparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/settingsparameters","title":"SettingsParameters","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitversionnumber","title":"var ConversationKitVersionNumber: Double","type":"var"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitversionstring","title":"let ConversationKitVersionString: <<error type>>","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactiontitle","title":"MessageActionTitle","type":"typealias"},{"path":"\/documentation\/zendesksdkconversationkit\/postbackactionid","title":"PostbackActionID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actionitemsize\/compact","title":"case compact","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/actionitemsize\/large","title":"case large","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/actionitemsize\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actionitemsize\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actionitemsize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/actionitemsize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/actionitemsize","title":"ActionItemSize","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/buy","title":"case buy","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/link","title":"case link","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/locationrequest","title":"case locationRequest","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/postback","title":"case postback","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/reply","title":"case reply","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/share","title":"case share","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/webview","title":"case webview","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/actiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/actiontype","title":"ActionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/conversationread","title":"case conversationRead","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/conversationroutingassigned","title":"case conversationRoutingAssigned","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/conversationroutingcleared","title":"case conversationRoutingCleared","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/conversationroutingqueued","title":"case conversationRoutingQueued","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/typingstart","title":"case typingStart","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/typingstop","title":"case typingStop","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/activitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/activitytype","title":"ActivityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/jwt","title":"case jwt","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/sessiontoken","title":"case sessionToken","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/unauthenticated","title":"case unauthenticated","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/authenticationtype","title":"AuthenticationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authortype\/business","title":"case business","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/authortype\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/authortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authortype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/authortype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/authortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/authortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/authortype","title":"AuthorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/connected","title":"case connected","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/connectedrealtime","title":"case connectedRealtime","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/connectingrealtime","title":"case connectingRealtime","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/disconnected","title":"case disconnected","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/connectionstatus","title":"ConnectionStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/expiredjwt","title":"case expiredJWT","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/failedtodecodejwt","title":"case failedToDecodeJWT","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/httperror(description:httperror:)","title":"case httpError(description: String, httpError: HTTPError)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/incorrectaccesslevelforaction","title":"case incorrectAccessLevelForAction","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/mappingerror","title":"case mappingError","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/userexists","title":"case userExists","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/erroruserinfo","title":"var errorUserInfo: [String : Any]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/errordomain-5h6im","title":"static var errorDomain: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/errorcode","title":"var errorCode: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/errordomain-691ax","title":"static var errorDomain: String","type":"property"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/customnserror-implementations","title":"CustomNSError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkiterror","title":"ConversationKitError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/activityreceived(activity:conversationid:)","title":"case activityReceived(activity: Activity, conversationId: String)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/connectionstatuschanged(_:)","title":"case connectionStatusChanged(ConnectionStatus)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/conversationadded(conversation:)","title":"case conversationAdded(conversation: Conversation)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/conversationremoved(conversationid:)","title":"case conversationRemoved(conversationId: String)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/conversationstarted(conversation:)","title":"case conversationStarted(conversation: Conversation)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/conversationupdated(_:)","title":"case conversationUpdated(Conversation)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/fetchwaittimedataresult(conversationid:result:)","title":"case fetchWaitTimeDataResult(conversationId: String, result: Result<WaitTimeData, ConversationKitError>)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/loginresult(result:)","title":"case loginResult(result: Result<User, ConversationKitError>)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/logoutresult(error:)","title":"case logoutResult(error: ConversationKitError?)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/messagereceived(message:conversationid:)","title":"case messageReceived(message: Message, conversationId: String)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/messageupdated(message:conversationid:)","title":"case messageUpdated(message: Message, conversationId: String)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/openwebviewmessagereceived(url:size:conversationid:)","title":"case openWebViewMessageReceived(url: String, size: WebViewActionSize, conversationId: String)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/persisteduserretrieved(_:)","title":"case persistedUserRetrieved(User)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/proactivemessagestatuschanged(status:proactivemessage:)","title":"case proactiveMessageStatusChanged(status: ProactiveMessageStatus, proactiveMessage: ProactiveMessage)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/pushtokenprepared(_:)","title":"case pushTokenPrepared(String)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/pushtokenupdateresult(token:error:)","title":"case pushTokenUpdateResult(token: String, error: ConversationKitError?)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/sendmessagefailed(error:)","title":"case sendMessageFailed(error: ConversationKitError)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/useraccessrevoked(error:)","title":"case userAccessRevoked(error: ConversationKitError)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/userupdated(_:)","title":"case userUpdated(User)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationkitevent","title":"ConversationKitEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/assigned","title":"case assigned","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/queued","title":"case queued","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationroutingstatus","title":"ConversationRoutingStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/active","title":"case active","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/init(rawvalue:)-3wb1s","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/init(rawvalue:)-66b1x","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationstatus","title":"ConversationStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/group","title":"case group","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/personal","title":"case personal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/conversationtype","title":"ConversationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/email","title":"case email","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/select","title":"case select","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/fieldtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/fieldtype","title":"FieldType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/email(_:)","title":"case email(EmailFormField)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/select(_:)","title":"case select(SelectFormField)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/text(_:)","title":"case text(TextFormField)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/type","title":"var type: FieldType","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/value","title":"var value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/zendesksdkconversationkit\/formfield\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/formfield\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/formfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/formfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/formfield","title":"FormField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/offered","title":"case offered","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/paid","title":"case paid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionbuystate","title":"MessageActionBuyState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/buy(_:)","title":"case buy(BuyAction)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/link(_:)","title":"case link(LinkAction)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/locationrequest(_:)","title":"case locationRequest(LocationRequestAction)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/postback(_:)","title":"case postback(PostbackAction)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/reply(_:)","title":"case reply(ReplyAction)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/share(_:)","title":"case share(ShareAction)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/webview(_:)","title":"case webview(WebViewAction)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/value","title":"var value: MessageAction","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/messageactionmodel","title":"MessageActionModel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/carousel(_:)","title":"case carousel(CarouselMessageContent)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/file(_:)","title":"case file(FileMessageContent)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/form(_:)","title":"case form(FormMessageContent)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/formresponse(_:)","title":"case formResponse(FormResponseMessageContent)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/image(_:)","title":"case image(ImageMessageContent)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/text(_:)","title":"case text(TextMessageContent)","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/unsupported(_:)","title":"case unsupported(UnsupportedMessageContent)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/messagecontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/messagecontent","title":"MessageContent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/exceedsmaxfilesize","title":"case exceedsMaxFileSize","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/failedattachmentnotsupported","title":"case failedAttachmentNotSupported","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/pending","title":"case pending","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/sent","title":"case sent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/isfailed","title":"var isFailed: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/messagestatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/messagestatus","title":"MessageStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/carousel","title":"case carousel","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/file","title":"case file","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/form","title":"case form","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/formresponse","title":"case formResponse","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/list","title":"case list","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/location","title":"case location","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/text","title":"case text","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/unsupported","title":"case unsupported","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/messagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/messagetype","title":"MessageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/conversationhasbeenrepliedto","title":"case conversationHasBeenRepliedTo","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/notificationhasbeenclicked","title":"case notificationHasBeenClicked","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/notificationhasbeendisplayed","title":"case notificationHasBeenDisplayed","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/notificationwilldisplay","title":"case notificationWillDisplay","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/proactivemessagestatus","title":"ProactiveMessageStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/ai","title":"case AI","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/init(rawvalue:)","title":"init?(rawValue: RawValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/rawvalue-swift.property","title":"var rawValue: RawValue","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/rawvalue-swift.typealias","title":"Subrole.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/subrole\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/subrole\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/subrole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/subrole","title":"Subrole","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/new","title":"case new","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/repeat","title":"case `repeat`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/visittype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/visittype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/visittype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/visittype","title":"VisitType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/compact","title":"case compact","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/full","title":"case full","type":"case"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/tall","title":"case tall","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/zendesksdkconversationkit\/webviewactionsize","title":"WebViewActionSize","type":"enum"}],"path":"\/documentation\/zendesksdkconversationkit","title":"ZendeskSDKConversationKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}